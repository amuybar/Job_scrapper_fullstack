{"ast":null,"code":"var _jsxFileName = \"/home/barrack/Job-project/job_scrapper_frontend/src/components/LogSection.tsx\";\n// src/components/LogSection.tsx\n\nimport React from 'react';\nimport Spinner from './Spinner';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LogSection = ({\n  logs,\n  showlogDiv,\n  setShowlogDiv,\n  isLoading\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"log-section\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Logs\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), isLoading ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"logs\",\n      children: logs.map((log, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n        children: log\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setShowlogDiv(false),\n      children: \"Hide Logs\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n_c = LogSection;\nexport default LogSection;\nvar _c;\n$RefreshReg$(_c, \"LogSection\");","map":{"version":3,"names":["React","Spinner","jsxDEV","_jsxDEV","LogSection","logs","showlogDiv","setShowlogDiv","isLoading","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","log","index","onClick","_c","$RefreshReg$"],"sources":["/home/barrack/Job-project/job_scrapper_frontend/src/components/LogSection.tsx"],"sourcesContent":["// src/components/LogSection.tsx\n\nimport React from 'react';\nimport Spinner from './Spinner';\n\ninterface LogSectionProps {\n  logs: string[];\n  showlogDiv: boolean;\n  setShowlogDiv: (value: boolean) => void;\n  isLoading: boolean;\n}\n\nconst LogSection: React.FC<LogSectionProps> = ({\n  logs,\n  showlogDiv,\n  setShowlogDiv,\n  isLoading,\n}) => {\n  return (\n    <div className=\"log-section\">\n      <h3>Logs</h3>\n      {isLoading ? (\n        <Spinner />\n      ) : (\n        <div className=\"logs\">\n          {logs.map((log, index) => (\n            <p key={index}>{log}</p>\n          ))}\n        </div>\n      )}\n      <button onClick={() => setShowlogDiv(false)}>Hide Logs</button>\n    </div>\n  );\n};\n\nexport default LogSection;"],"mappings":";AAAA;;AAEA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,OAAO,MAAM,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAShC,MAAMC,UAAqC,GAAGA,CAAC;EAC7CC,IAAI;EACJC,UAAU;EACVC,aAAa;EACbC;AACF,CAAC,KAAK;EACJ,oBACEL,OAAA;IAAKM,SAAS,EAAC,aAAa;IAAAC,QAAA,gBAC1BP,OAAA;MAAAO,QAAA,EAAI;IAAI;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACZN,SAAS,gBACRL,OAAA,CAACF,OAAO;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,gBAEXX,OAAA;MAAKM,SAAS,EAAC,MAAM;MAAAC,QAAA,EAClBL,IAAI,CAACU,GAAG,CAAC,CAACC,GAAG,EAAEC,KAAK,kBACnBd,OAAA;QAAAO,QAAA,EAAgBM;MAAG,GAAXC,KAAK;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAU,CACxB;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CACN,eACDX,OAAA;MAAQe,OAAO,EAAEA,CAAA,KAAMX,aAAa,CAAC,KAAK,CAAE;MAAAG,QAAA,EAAC;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC5D,CAAC;AAEV,CAAC;AAACK,EAAA,GArBIf,UAAqC;AAuB3C,eAAeA,UAAU;AAAC,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}