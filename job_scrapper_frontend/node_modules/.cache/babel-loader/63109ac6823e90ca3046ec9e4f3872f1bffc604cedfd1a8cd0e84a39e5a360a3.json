{"ast":null,"code":"var _jsxFileName = \"/home/barrack/Job-project/job-seeker/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst JobScraper = () => {\n  _s();\n  const [jobs, setJobs] = useState([]);\n  const [searchTerm, setSearchTerm] = useState('');\n  useEffect(() => {\n    const fetchJobs = async () => {\n      try {\n        const response = await axios.get('127.0.0.1:8000/api/jobs/');\n        setJobs(response.data);\n      } catch (error) {\n        console.error('Error fetching jobs:', error);\n      }\n    };\n    fetchJobs();\n  }, []);\n  const handleSearch = event => {\n    setSearchTerm(event.target.value);\n  };\n  const filteredJobs = jobs.filter(job => job.title.toLowerCase().includes(searchTerm.toLowerCase()));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"top\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Job Listings\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Search jobs...\",\n        value: searchTerm,\n        onChange: handleSearch\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"job-cards\",\n      children: filteredJobs.map(job => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"job-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: job.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: job.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: job.requirements\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: job.specifications\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Apply\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 25\n        }, this)]\n      }, job.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n};\n_s(JobScraper, \"ElRKo5bt5ZNIjTUsb3a9YQgqlvM=\");\n_c = JobScraper;\nexport default JobScraper;\nvar _c;\n$RefreshReg$(_c, \"JobScraper\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","JobScraper","_s","jobs","setJobs","searchTerm","setSearchTerm","fetchJobs","response","get","data","error","console","handleSearch","event","target","value","filteredJobs","filter","job","title","toLowerCase","includes","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","map","description","requirements","specifications","id","_c","$RefreshReg$"],"sources":["/home/barrack/Job-project/job-seeker/src/App.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './App.css'\ninterface JobData {\n    id: number; \n    title: string;\n    description: string;\n    requirements: string;\n    specifications: string;\n}\n\nconst JobScraper: React.FC = () => {\n    const [jobs, setJobs] = useState<JobData[]>([]);\n    const [searchTerm, setSearchTerm] = useState<string>('');\n\n    useEffect(() => {\n        const fetchJobs = async () => {\n            try {\n                const response = await axios.get<JobData[]>('127.0.0.1:8000/api/jobs/'); \n                setJobs(response.data);\n            } catch (error) {\n                console.error('Error fetching jobs:', error);\n            }\n        };\n\n        fetchJobs();\n    }, []);\n\n    const handleSearch = (event: React.ChangeEvent<HTMLInputElement>) => {\n        setSearchTerm(event.target.value);\n    };\n\n    const filteredJobs = jobs.filter(job =>\n        job.title.toLowerCase().includes(searchTerm.toLowerCase())\n    );\n\n    return (\n        <div className='top'>\n            <h1>Job Listings</h1>\n            <div>\n                <input\n                    type=\"text\"\n                    placeholder=\"Search jobs...\"\n                    value={searchTerm}\n                    onChange={handleSearch}\n                />\n            </div>\n            <div className=\"job-cards\">\n                {filteredJobs.map(job => (\n                    <div key={job.id} className=\"job-card\">\n                        <h2>{job.title}</h2>\n                        <p>{job.description}</p>\n                        <p>{job.requirements}</p>\n                        <p>{job.specifications}</p>\n                        <button>Apply</button>\n                    </div>\n                ))}\n            </div>\n        </div>\n    );\n};\n\nexport default JobScraper;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}